name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
          else
            npm init -y
            npm install --save-dev prettier htmlhint
          fi

      - name: Lint and validate files
        run: |
          # Validate HTML files
          if command -v npx &> /dev/null; then
            npx htmlhint "*.html" || echo "HTML validation completed with warnings"
          fi
          
          # Check for common issues
          echo "Checking file structure..."
          ls -la
          
          # Validate that required files exist
          if [ ! -f "Escalas.html" ]; then
            echo "Error: Escalas.html not found!"
            exit 1
          fi
          
          if [ ! -f "style.css" ]; then
            echo "Error: style.css not found!"
            exit 1
          fi
          
          if [ ! -f "index.js" ]; then
            echo "Error: index.js not found!"
            exit 1
          fi

      - name: Optimize files for production
        run: |
          # Create build directory
          mkdir -p build
          
          # Copy main files to build directory
          cp Escalas.html build/index.html
          cp style.css build/
          cp index.js build/
          cp README.md build/
          
          # Copy src directory if exists
          if [ -d "src" ]; then
            cp -r src build/
          fi
          
          # Copy any PDF files
          if [ -f "escaleras.pdf" ]; then
            cp escaleras.pdf build/
          fi
          
          # Create a proper package.json if it doesn't exist
          if [ ! -f build/package.json ]; then
            cat > build/package.json << 'EOF'
          {
            "name": "lavada-de-escalas",
            "version": "1.0.0",
            "description": "Sistema web para gestionar escalas de limpieza de escaleras",
            "main": "index.html",
            "scripts": {
              "start": "python -m http.server 8000",
              "dev": "python -m http.server 8000"
            },
            "keywords": ["escalas", "limpieza", "edificios", "gestiÃ³n"],
            "author": "Sebastian Ruiz",
            "license": "MIT",
            "homepage": "https://github.com/tu-usuario/building-dates"
          }
          EOF
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4